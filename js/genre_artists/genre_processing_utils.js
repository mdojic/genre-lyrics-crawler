// Generated by CoffeeScript 1.12.6
(function() {
  this.GenreProcessingUtils = (function() {
    var UNWANTED_SUBGENRES;

    function GenreProcessingUtils() {}

    UNWANTED_SUBGENRES = {
      death: ["thrash", "doom", "black", "electronic", "heavy", "speed", "grind", "melodic", "rock", "punk", "viking", "folk", "avant", "gothic", "industrial", "roll"],
      black: ["death", "doom", "thrash", "electronic", "heavy", "speed", "grind", "melodic", "rock", "punk", "viking", "folk", "avant", "gothic", "industrial", "roll"],
      doom: ["thrash", "death", "black", "electronic", "heavy", "speed", "grind", "melodic", "rock", "punk", "viking", "folk", "avant", "gothic", "industrial", "roll"],
      thrash: ["death", "doom", "black", "electronic", "heavy", "grind", "melodic", "rock", "viking", "folk", "avant", "gothic", "industrial", "roll"]
    };

    GenreProcessingUtils.filterGenreArtists = function(artists, genre) {
      var artist, artistGenre, artistHasUnwantedSubgenre, filteredArtists, i, j, len, len1, unwantedSubgenre, unwantedSubgenres;
      console.log("*** *** filterGenreArtists for genre: ", genre);
      unwantedSubgenres = UNWANTED_SUBGENRES[genre];
      if (unwantedSubgenres === void 0) {
        console.log("No unwanted subgenres for genre " + genre);
        return artists;
      }
      console.log("*** unwantedSubgenres: ", unwantedSubgenres);
      filteredArtists = [];
      for (i = 0, len = artists.length; i < len; i++) {
        artist = artists[i];
        artistGenre = artist.artistGenre.toLowerCase();
        artistHasUnwantedSubgenre = false;
        for (j = 0, len1 = unwantedSubgenres.length; j < len1; j++) {
          unwantedSubgenre = unwantedSubgenres[j];
          artistHasUnwantedSubgenre = artistGenre.indexOf(unwantedSubgenre) > -1;
          if (artistHasUnwantedSubgenre) {
            break;
          }
        }
        if (!artistHasUnwantedSubgenre) {
          filteredArtists.push(artist);
        }
      }
      return filteredArtists;
    };

    return GenreProcessingUtils;

  })();

}).call(this);
