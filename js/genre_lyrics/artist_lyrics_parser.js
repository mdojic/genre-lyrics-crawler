// Generated by CoffeeScript 1.12.6
(function() {
  var AlbumLyricsParser, SongLyricsParser;

  this.ArtistLyricsParser = (function() {
    var ALBUM_CONTAINER_CLASS, ALBUM_CONTAINER_ELEMENT;

    function ArtistLyricsParser() {}

    ALBUM_CONTAINER_ELEMENT = "div";

    ALBUM_CONTAINER_CLASS = "album";

    ArtistLyricsParser.parseArtistLyrics = function(artistLyricsPage, callbackContext, parseSuccessFunction) {
      this.callbackContext = callbackContext;
      this.parseSuccessFunction = parseSuccessFunction;
      this.artistLyricsPage = $(artistLyricsPage);
      this.albumElements = this.artistLyricsPage.find(ALBUM_CONTAINER_ELEMENT + "." + ALBUM_CONTAINER_CLASS);
      console.log("=== Number of albums: ", this.albumElements.length);
      if (this.albumElements.length === 0) {
        this.parseSuccessFunction.call(this.callbackContext, []);
        return;
      }
      this.currentAlbumIndex = 0;
      this.currentAlbumElement = this.albumElements[this.currentAlbumIndex];
      this.lastAlbumIndex = this.albumElements.length - 1;
      this.artistAlbumLyrics = [];
      return AlbumLyricsParser.parseAlbumLyrics(this.currentAlbumElement, this, this.albumElementParsed);
    };

    ArtistLyricsParser.albumElementParsed = function(lyrics) {
      var context, timeout;
      this.artistAlbumLyrics = this.artistAlbumLyrics.concat(lyrics);
      if (this.currentAlbumIndex === this.lastAlbumIndex) {
        console.log("[<-] Parsed last album");
        return this.parseSuccessFunction.call(this.callbackContext, this.artistAlbumLyrics);
      } else {
        console.log("[-] Not last album yet, parse next one");
        this.currentAlbumElement = this._getNextAlbumElement();
        context = this;
        timeout = AppData.getRequestTimeot();
        return setTimeout(function() {
          return AlbumLyricsParser.parseAlbumLyrics(context.currentAlbumElement, context, context.albumElementParsed);
        }, timeout);
      }
    };

    ArtistLyricsParser._getNextAlbumElement = function() {
      return this.albumElements[++this.currentAlbumIndex];
    };

    return ArtistLyricsParser;

  })();

  AlbumLyricsParser = (function() {
    var ROOT_URL, SINGLE_SONG_LYRICS_SEPARATOR, SONG_ELEMENT, SONG_ELEMENT_URL_ATTRIBUTE, SONG_LYRICS_CONTAINER_CLASS, SONG_LYRICS_CONTAINER_ELEMENT;

    function AlbumLyricsParser() {}

    ROOT_URL = "http://www.darklyrics.com";

    SONG_ELEMENT = "a";

    SONG_ELEMENT_URL_ATTRIBUTE = "href";

    SONG_LYRICS_CONTAINER_ELEMENT = "div";

    SONG_LYRICS_CONTAINER_CLASS = "lyrics";

    SINGLE_SONG_LYRICS_SEPARATOR = "<h3>";

    AlbumLyricsParser.parseAlbumLyrics = function(albumElement1, parentContext, callbackFunction) {
      var albumElement, firstSong, url, urlIsValid;
      this.albumElement = albumElement1;
      this.parentContext = parentContext;
      this.callbackFunction = callbackFunction;
      console.log("Parse album lyrics for album element: ", this.albumElement);
      albumElement = $(this.albumElement);
      this.songElements = albumElement.find("" + SONG_ELEMENT);
      firstSong = this.songElements.get(0);
      firstSong = $(firstSong);
      url = firstSong.attr(SONG_ELEMENT_URL_ATTRIBUTE);
      url = this._getAlbumLyricsAbsoluteUrl(url);
      urlIsValid = this._isUrlDomainValid(url);
      if (urlIsValid) {
        return AjaxUtils.sendAjax('GET', url, this, this._albumSongsPageLoaded, this._albumSongsPageLoadingError);
      } else {
        return this.callbackFunction.call(this.parentContext, []);
      }
    };

    AlbumLyricsParser._getAlbumLyricsAbsoluteUrl = function(relativeUrl) {
      var absoluteUrl;
      if (AppUtils.isEmptyData(relativeUrl)) {
        return "";
      }
      absoluteUrl = relativeUrl.replace("..", ROOT_URL);
      return absoluteUrl;
    };

    AlbumLyricsParser._albumSongsPageLoaded = function(data, onTheFlyData) {
      var albumSongsPage, songLyricsContainer, songLyricsContent;
      console.log("--- Loaded page with album lyrics");
      albumSongsPage = $(data);
      songLyricsContainer = albumSongsPage.find(SONG_LYRICS_CONTAINER_ELEMENT + "." + SONG_LYRICS_CONTAINER_CLASS);
      songLyricsContent = songLyricsContainer.html();
      return this.callbackFunction.call(this.parentContext, songLyricsContent);
    };

    AlbumLyricsParser._albumSongsPageLoadingError = function(xhr, status) {
      console.log("Error while loading album songs page");
      console.log(xhr);
      console.log(status);
      return this.callbackFunction.call(this.parentContext, []);
    };

    AlbumLyricsParser._isUrlDomainValid = function(url) {
      return (!AppUtils.isEmptyData(url)) && (url.indexOf("darklyrics.com") > -1);
    };

    return AlbumLyricsParser;

  })();

  SongLyricsParser = (function() {
    function SongLyricsParser() {}

    SongLyricsParser.parseSongLyrics = function(songLyrics) {
      songLyrics = songLyrics.replace(/<(?:.|\n)*?>/gm, '');
      return songLyrics;
    };

    return SongLyricsParser;

  })();

}).call(this);
