// Generated by CoffeeScript 1.12.6
(function() {
  this.SingleArtistLyricsCrawler = (function() {
    var ARTIST_NAME_SHORTCODE, ARTIST_PAGE_LINK_TEMPLATE, FIRST_LETTER_SHORTCODE;

    ARTIST_PAGE_LINK_TEMPLATE = "http://www.darklyrics.com/$first_letter$/$artist_name$.html";

    FIRST_LETTER_SHORTCODE = "$first_letter$";

    ARTIST_NAME_SHORTCODE = "$artist_name$";

    function SingleArtistLyricsCrawler(artist, parentContext, callbackFunction) {
      this.artist = artist;
      this.parentContext = parentContext;
      this.callbackFunction = callbackFunction;
      console.log("&&& created @SingleArtistLyricsCrawler for artist: ", this.artist);
      this.artistName = this.artist.artistName;
      this.artistGenre = this.artist.artistGenre;
    }

    SingleArtistLyricsCrawler.prototype.crawl = function() {
      var link;
      console.log("Crawl lyrics for artist: ", this.artist);
      link = this._getArtistLink(this.artistName);
      return AjaxUtils.sendAjax('GET', link, this, this._artistPageLoaded, this._artistPageLoadingError);
    };

    SingleArtistLyricsCrawler.prototype._artistPageLoaded = function(data, onTheFlyData) {
      return ArtistLyricsParser.parseArtistLyrics(data, this, this._songLyricsParsed);
    };

    SingleArtistLyricsCrawler.prototype._artistPageLoadingError = function(xhr, status) {
      console.log("Artist page not found for artist: " + this.artistName + ", move on");
      return this.callbackFunction.call(this.parentContext, this.artistName, this.artistGenre, null);
    };

    SingleArtistLyricsCrawler.prototype._getFirstLetter = function(artistName) {
      if (artistName === void 0 || artistName === "") {
        return "";
      }
      return artistName.charAt(0);
    };

    SingleArtistLyricsCrawler.prototype._removeSpaces = function(artistName) {
      var nameWithNoSpaces;
      nameWithNoSpaces = artistName.replace(/ /g, '');
      return nameWithNoSpaces;
    };

    SingleArtistLyricsCrawler.prototype._getArtistLink = function(artistName) {
      var firstLetter, link, nameWithNoSpaces;
      firstLetter = this._getFirstLetter(artistName);
      nameWithNoSpaces = this._removeSpaces(artistName);
      link = ARTIST_PAGE_LINK_TEMPLATE;
      link = link.replace(FIRST_LETTER_SHORTCODE, firstLetter);
      link = link.replace(ARTIST_NAME_SHORTCODE, nameWithNoSpaces);
      return link.toLowerCase();
    };

    SingleArtistLyricsCrawler.prototype._songLyricsParsed = function(lyrics) {
      var data, progressWriterUrl;
      console.log("% % % _songLyricsParsed, save progress for " + this.artistName);
      AppData.setLastArtist(this.artistName);
      progressWriterUrl = AppData.getProgressWriterUrl();
      data = {
        artist: this.artistName
      };
      return AjaxUtils.sendAjax("POST", progressWriterUrl, this, this._progressWritten, this._progressWritingError, data, lyrics);
    };

    SingleArtistLyricsCrawler.prototype._progressWritten = function(data, onTheFlyData) {
      var lyrics;
      console.log("% % % _progressWritten for " + this.artistName);
      lyrics = onTheFlyData;
      return this.callbackFunction.call(this.parentContext, this.artistName, this.artistGenre, lyrics);
    };

    SingleArtistLyricsCrawler.prototype._progressWritingError = function(errorCode, errorMessage) {
      console.log("Error while writing progress");
      console.log(errorMessage);
      return console.log(errorCode);
    };

    return SingleArtistLyricsCrawler;

  })();

}).call(this);
